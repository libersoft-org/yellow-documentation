Design stranky:
- I když je TOC zavřeno, resizer zůstává na původním místě
- V mobilní verzi při kliknutí na položku v TOC zasunout menu s TOC
- Když je menu vysunuté, tak místo hamburgeru zobrazovat křížek
- Šipku přesunout vlevo od textu a předělat jí na plusko / mínusko
- Dořešit itemy v TOC se šipkou mají rozdílnou velikost oproti těm bez šipky
- Když je TOC menu na desktop verzi zasunuté, tak v mobilní je vysunuté a obráceně - chtělo by to předělat u mobilní verze, aby se nevysouvalo, když na desktopu je zasunuté
- Automatický highlight sekce v TOC, na kterou je aktuálně doscrollováno (jinou barvou, než aktivní - zakliknutá sekce)
- Po refreshi stránky, pokud je v adrese #sekce - tak jí zvýraznit v TOC jako aktivní
- Do obsahu (#doc) přidat možnost srolování každého nadpisu (accordion), stejně jako je to v #toc.

Návrh verze 2:
- Uživatelské / správcovské heslo použít jako soukromý klíč a z něj vytvořit veřejný - pokud to jde, vytvořit stejný typ challenge-response přihlášení, jako je u privátního klíče, aby se heslo nemuselo (byť v zahashované podobě) posílat po síti (pokud to má vůbec smysl, protože Argon2 pokaždé se posílá něco jiného po síti, takže to funguje podobně, jako challenge-response) - toto vyžaduje nějaký hlubší research kryptografa (jak moc je Argon2 prolomitelný, jestli vůbec lze provést něco jako password-as-private-key, jak moc je to bezpečné atd.). Obecně prolomení šifry ve stylu: "z public key získat private key" versus "prolomit Argon2id hash"
- Admin příkazy pro management modulů a audit logů - přidá se do dokumentace až poté, co zjistíme, co všechno je třeba logovat
- Tokenové páry krátkodobých tokenů - access token a refresh token, místo dlouhodobých tokenů - zjistit implementací, jelikož nevíme, jak dlouhé sessions většinou udrží WebTransport a jestli se nebudou měnit při každém připojení.
- Digitální podpis serveru - navrhnout další alternativu k DNS - něco jako notary server na Matrix protokolu (resp. ne jako náhrada za DNS, ale jako další vrstva zabezpečení, která musí odpovídat tomu, co už je v DNS) - tohle je složitější a jsou potřeba implementační testy
- Rozšíření blokace na IP na obecný rate limit na počet commandů za jednotku času (těžko říct, jestli to je reálné, protože file transfer toho bude generovat docela hodně, takže buď se to nebude týkat některých commandů nebo vymyslet nějaký mechanismus zjištění, jestli to není jen commandový spam... takže se uvidí při implementačních testech v budoucnu)
- Přidat do dokumentace i stavové chyby, když uživatel použije jiný datový typ na vstupu (invalid data type) - tohle bude potřeba nějak generalizovat
- Zvážit implementaci: dodatečný šifrovaný tunel, kde je šifrovaný každý command uvnitř WebTransportu, s jinou šifrou, než používá TLS v rámci WebTransportu - proč - kdyby někdo rozlouskl TLS. Dalo by se tam použít něco jako double ratchet, celé by to mělo být optional, protože to zpomaluje přenos. Je potřeba zjistit při implementaci, jak moc to zpomaluje
- Zašifrování tokenu relace vydaného serverem veřejným klíčem uživatele? (kdyby selhalo šifrování přes WebTransport) a obráceně ze strany klientat to šifrovat veřejným klíčem serveru z DNS - otázka je, jestli to vůbec má smysl, když to může někdo odchytit a posílat to v té zašifrované formě a nebo to nějak osaltovat. Taky je otázka, jestli to vůbec dělat specificky pro tento command a nedat uživatelům možnost šifrovat všechny commandy (viz předchozí bod s dodatečným šifrováním commandů).
- Zvážit přesunutí uživatelských účtů / přihlášení do modulu - to přidá další možnosti ověření: OAuth / social loginy / možnost úplně jiné identity atd.
- ACL s právy pro konkrétní akce adminů + zavedení možnosti změny klíče ostatních adminů v případě, že má admin toto právo
